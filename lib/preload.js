const xhrProxy = require('./xhr_proxy.js');const {ipcRenderer, contextBridge} = require('electron');const axios = require('axios')const moment = require("moment");const ajaxService = axios.create({    withCredentials: true,    headers: {        // 'Content-Type':'application/json;charset=UTF-8',    }});ajaxService.interceptors.request.use((config) => {    return config;}, (error) => {    return error;});let webreportserviceInfo = nullipcRenderer.on('requestData', (event, args) => {    webreportserviceInfo = args})ipcRenderer.on('post', (event, args) => {    // console.log('setData==>', args)    // console.log('webreportserviceInfo==>', webreportserviceInfo)    const locationSearch = window.location.search.replace('?', '')    const search = {};    locationSearch.split('&').forEach(item => {        const dataItem = item.split('=')        search[dataItem[0]] = dataItem[1]    })    console.log(args)    const formData = new FormData()    formData.append('taskid',search.taskid)    formData.append('btype',search.btype)    formData.append('bbq',search.bbq)    formData.append('ds',search.dataset)    formData.append('upid',search.bbhid)    formData.append('curbbh',search.bbhid)    formData.append('curbtype',webreportserviceInfo.curbbhtype)    formData.append('__t__',moment().format('x'))    formData.append('rpt','XXB')    formData.append('data',args)    formData.append('bbh',webreportserviceInfo.userid)    formData.append('customparams','')    // 发送 POST 请求    ajaxService({        method: 'post',        url: '/user/12345',        withCredentials: true,        data:formData    });    console.log({        api: 'https://zb.lnwsjktj.com:8080/webPage/ei/webreportservice.do',        method: 'POST',    })    // 获取数据之后保存数据    // https://zb.lnwsjktj.com:8080/webPage/ei/webreportservice.do})try {    contextBridge.exposeInMainWorld('electronAPI', {        LoadData: (data) => ipcRenderer.invoke('LoadData', data)    })} catch (e) {}console.log('注入preloadJS了')